# External prefix declarations
prefix dbo:   <http://dbpedia.org/ontology/>
prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#>
prefix sh:    <http://www.w3.org/ns/shacl#>
prefix xsd:   <http://www.w3.org/2001/XMLSchema#>

# Project-specific prefix
prefix def:   <https://demo.triplydb.com/rotterdam/shacl-example/model/def/>
prefix graph: <https://demo.triplydb.com/rotterdam/shacl-example/graph/>
prefix shp:   <https://demo.triplydb.com/rotterdam/shacl-example/model/shp/>

graph:model {

  shp:Building
    a sh:NodeShape;
    sh:targetClass dbo:Building;
    sh:property
      shp:Building_aantalPersonen,
      shp:Building_woonwijk, 
      shp:Building_bouwlaag, 
      shp:Building_gebouwType,
      shp:Building_hoogte;
    sh:sparql 
      shp:Building_gebouwType_sparql,
      shp:Building_hoogte_sparql, 
      shp:Building_dertigprocentwoonhuis_sparql. 

  shp:Building_aantalPersonen
    sh:path def:aantalPersonen;
    sh:minCount 1;
    sh:maxCount 1;
    sh:message 'Een gebouw moet een aantal personen hebben.';
    sh:severity sh:Violation. 

  shp:Building_woonwijk
    sh:path def:woonwijk;
    sh:minCount 1;
    sh:maxCount 1;
    sh:message 'Een gebouw moet een Woonwijk met correcte code hebben.';
    sh:pattern '^[A-Z]{1}$';
    sh:severity sh:Violation. 

  shp:Building_bouwlaag
    sh:path def:bouwlaag;
    sh:minCount 1;
    sh:message 'Een gebouw moet bouwlagen hebben.';
    sh:severity sh:Violation. 

  shp:Building_gebouwType
    sh:path def:gebouwType;
    sh:minCount 1;
    sh:maxCount 1;
    sh:message 'Een gebouw moet een type hebben.';
    sh:severity sh:Violation. 

  shp:Building_hoogte
    sh:path def:hoogte;
    sh:datatype xsd:integer;
    sh:minCount 1;
    sh:maxCount 1;
    sh:minInclusive 0;
    sh:maxInclusive 100;
    sh:message 'Een gebouw moet een hoogte tuseen 0 en 100 meters hebben.';
    sh:severity sh:Violation. 

  shp:Building_gebouwType_sparql
    a sh:SPARQLConstraint;
    sh:message 'Gebouw {?this} van type {?buildingType} moet een Woonhuis, Kantoor, of Commercieel zijn.';
    sh:severity sh:Violation;
    sh:datatype xsd:string;
    sh:select '''
    prefix def: <https://demo.triplydb.com/rotterdam/vcs/model/def/>
    prefix dbo: <http://dbpedia.org/ontology/>
    select ?this ?buildingType
    where {
      ?this a dbo:Building;
      def:gebouwType ?buildingType.
      filter (?buildingType not in ('Woonhuis', 'Kantoor', 'Commercieel'))
    }
    '''.

  shp:Building_hoogte_sparql
    a sh:SPARQLConstraint;
    sh:message 'Gebouw {?this} met hoogte {?height} in Woonwijk A moet kleiner zijn dan 19 meter.';
    sh:severity sh:Violation;
    sh:datatype xsd:string;
    sh:select '''
    prefix def: <https://demo.triplydb.com/rotterdam/vcs/model/def/>
    prefix dbo: <http://dbpedia.org/ontology/>

    select ?this ?height
    where {
      ?this a dbo:Building;
            def:hoogte ?height;
            def:woonwijk 'A'.
      filter (?height > 19)
    }
    '''.

  shp:Building_dertigprocentwoonhuis_sparql
    a sh:SPARQLConstraint;
    sh:message 'Woonwijk C moet gebouwen met bestemming Woonhuis hebben voor minstens 30%. {?woonhuisBuildings}/{?totalBuildings} van de gebouwen hebben bestemming Woonhuis, dit is {?this}%.';
    sh:severity sh:Violation;
    sh:datatype xsd:string;
    sh:select '''
    prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
    prefix def: <https://demo.triplydb.com/rotterdam/vcs/model/def/>
    prefix dbo: <http://dbpedia.org/ontology/>

    select ?woonhuisBuildings ?totalBuildings ((sum(?woonhuisBuildings) / sum(?totalBuildings)) * 100 AS ?this)
    where {
      {
        select (count(?building) as ?totalBuildings) where {
          ?building a dbo:Building;
                    def:woonwijk 'C'.
        }
      }
      {
        select (count(?woonhuis) AS ?woonhuisBuildings) where {
          ?woonhuis a dbo:Building;
                    def:woonwijk 'C';
                    def:gebouwType 'Woonhuis'.
        }
      }
    }
    group by ?this ?woonhuisBuildings ?totalBuildings
    having(((sum(?woonhuisBuildings) / sum(?totalBuildings)) * 100) < 30)
    '''.

  shp:Bouwlaag
    a sh:NodeShape;
    sh:targetClass def:Bouwlaag;
    sh:property 
      shp:Bouwlaag_bouwlaagElement;
    sh:sparql 
      shp:Bouwlaag_bouwlaagElement_sparql, 
      shp:Bouwlaag_hoogte_sparql. 

  shp:Bouwlaag_bouwlaagElement
    sh:path def:bouwlaagElement;
    sh:minCount 1;
    sh:message 'Een bouwlaag moet bouwlaag elementen hebben.';
    sh:severity sh:Violation. 

  shp:Bouwlaag_bouwlaagElement_sparql
    a sh:SPARQLConstraint;
    sh:message 'Het aantal bouwlaag elementen mag niet hoger zijn dan 3, het aantal is {?count}.';
    sh:severity sh:Violation;
    sh:select '''
    prefix def: <https://demo.triplydb.com/rotterdam/vcs/model/def/>
    select ?this (count(?floorElement) as ?count)
    where {
      ?this def:bouwlaagElement ?floorElement.
    }
    group by ?this
    having (count(?floorElement) > 3)
    '''. 

  shp:Bouwlaag_hoogte_sparql
    a sh:SPARQLConstraint;
    sh:message 'Het gebouw {?this} van hoogte {?height} heeft niet dezelfde hoogte heeft als de som van bouwlaag hoogtes: {?sumHeight}!';
    sh:severity sh:Violation;
    sh:select '''
    prefix def: <https://demo.triplydb.com/rotterdam/vcs/model/def/>
    prefix dbo: <http://dbpedia.org/ontology/>

    select ?this ?height (sum(?floorHeight) as ?sumHeight)
    where {
      ?this a dbo:Building;
            def:hoogte ?height;
            def:bouwlaag ?floor.
      ?floor def:bouwlaagElement $floorElement.
      $floorElement def:hoogte ?floorHeight.
    }
    group by ?this ?height
    having (sum(?floorHeight) != ?height)
    '''.

  shp:BouwlaagElement
    a sh:NodeShape;
    sh:target [
      a sh:SPARQLTarget;
      sh:select '''
      prefix def: <https://demo.triplydb.com/rotterdam/vcs/model/def/>
      select ?this
      where {
        ?bouwlaag a def:Bouwlaag;
                  def:bouwlaagElement ?this.
      }
      ''';
    ]; 
    sh:property 
      shp:BouwlaagElement_hoogte,
      shp:BouwlaagElement_label, 
      shp:BouwlaagElement_verdieping.
    
  shp:BouwlaagElement_hoogte
    sh:path def:hoogte;
    sh:datatype xsd:integer;
    sh:minCount 1;
    sh:maxCount 1;
    sh:minInclusive 0;
    sh:message 'Een bouwlaag moet een hoogte hebben.';
    sh:severity sh:Violation. 

  shp:BouwlaagElement_label
    sh:path rdfs:label;
    sh:minCount 1;
    sh:maxCount 1;
    sh:datatype xsd:string;
    sh:pattern '^Verdieping \\d\\d$';
    sh:message "Een bouwlaag moet een id label hebben met 'Verdieping XX' waar XX twee nummers zijn.";
    sh:severity sh:Violation. 

  shp:BouwlaagElement_verdieping
    sh:path def:verdieping;
    sh:datatype xsd:integer;
    sh:minCount 1;
    sh:maxCount 1;
    sh:minInclusive 0;
    sh:message 'Een bouwlaag moet een verdieping hebben.';
    sh:severity sh:Violation.
}